|rx
clock => rx_dp:datapath.clock
clock => rx_cu:control_unit.clock
reset => rx_dp:datapath.reset
reset => rx_cu:control_unit.reset
rxd => rx_dp:datapath.rxd
Pout[0] << rx_dp:datapath.Pout[0]
Pout[1] << rx_dp:datapath.Pout[1]
Pout[2] << rx_dp:datapath.Pout[2]
Pout[3] << rx_dp:datapath.Pout[3]
Pout[4] << rx_dp:datapath.Pout[4]
Pout[5] << rx_dp:datapath.Pout[5]
Pout[6] << rx_dp:datapath.Pout[6]
Pout[7] << rx_dp:datapath.Pout[7]


|rx|rx_dp:datapath
clock => voter_3bit:voter.clock
clock => start_detector:start_det.clock
clock => stop_detector:stop_det.clock
clock => shift_register_8bit:shift_reg_samples.clock
clock => counter_nbit:counter_shift.clock
clock => shift_register_8bit:shift_reg_data.clock
clock => counter_nbit:counter_rxfull.clock
reset => voter_3bit:voter.reset
reset => start_detector:start_det.reset
reset => stop_detector:stop_det.reset
reset => counter_nbit:counter_shift.clear
reset => counter_nbit:counter_rxfull.clear
clr_start => start_detector:start_det.clear
clear_c_shift => ~NO_FANOUT~
clear_c_rxfull => ~NO_FANOUT~
flag_rxfull <= counter_nbit:counter_rxfull.tc_flag
flag_shift_data <= counter_nbit:counter_shift.tc_flag
flag_shift_sample <= flag_shift_sample.DB_MAX_OUTPUT_PORT_TYPE
flag_68 <= Equal6.DB_MAX_OUTPUT_PORT_TYPE
rxd => shift_register_8bit:shift_reg_samples.s_in
voter_en => voter_3bit:voter.voter_en
sh_en_samples => shift_register_8bit:shift_reg_samples.sh_en
sh_en_data => shift_register_8bit:shift_reg_data.sh_en
ld_en_samples => shift_register_8bit:shift_reg_samples.ld_en
ld_en_data => shift_register_8bit:shift_reg_data.ld_en
start_en => start_detector:start_det.start_det_en
start <= start_detector:start_det.start
stop_en => stop_detector:stop_det.stop_det_en
stop <= stop_detector:stop_det.stop
count_en_sh => counter_nbit:counter_shift.en
count_en_rxfull => counter_nbit:counter_rxfull.en
Pout[0] <= shift_register_8bit:shift_reg_data.p_out[0]
Pout[1] <= shift_register_8bit:shift_reg_data.p_out[1]
Pout[2] <= shift_register_8bit:shift_reg_data.p_out[2]
Pout[3] <= shift_register_8bit:shift_reg_data.p_out[3]
Pout[4] <= shift_register_8bit:shift_reg_data.p_out[4]
Pout[5] <= shift_register_8bit:shift_reg_data.p_out[5]
Pout[6] <= shift_register_8bit:shift_reg_data.p_out[6]
Pout[7] <= shift_register_8bit:shift_reg_data.p_out[7]


|rx|rx_dp:datapath|voter_3bit:voter
clock => vote~reg0.CLK
reset => vote~reg0.ACLR
voter_en => vote~reg0.ENA
d[0] => vote.IN1
d[1] => vote.IN0
d[1] => vote.IN0
d[2] => vote.IN1
d[2] => vote.IN1
vote <= vote~reg0.DB_MAX_OUTPUT_PORT_TYPE


|rx|rx_dp:datapath|start_detector:start_det
clock => start~reg0.CLK
reset => start~reg0.ACLR
clear => ~NO_FANOUT~
start_det_en => ~NO_FANOUT~
d[0] => ~NO_FANOUT~
d[1] => ~NO_FANOUT~
d[2] => ~NO_FANOUT~
d[3] => ~NO_FANOUT~
d[4] => ~NO_FANOUT~
d[5] => ~NO_FANOUT~
d[6] => ~NO_FANOUT~
d[7] => ~NO_FANOUT~
start <= start~reg0.DB_MAX_OUTPUT_PORT_TYPE


|rx|rx_dp:datapath|stop_detector:stop_det
clock => stop~reg0.CLK
reset => stop~reg0.ACLR
stop_det_en => stop~reg0.ENA
d[0] => stop.IN0
d[1] => stop.IN1
d[2] => stop.IN1
d[3] => stop.IN1
d[4] => stop.IN1
d[5] => stop.IN1
d[6] => stop.IN1
d[7] => stop.IN1
stop <= stop~reg0.DB_MAX_OUTPUT_PORT_TYPE


|rx|rx_dp:datapath|shift_register_8bit:shift_reg_samples
clock => data[0].CLK
clock => data[1].CLK
clock => data[2].CLK
clock => data[3].CLK
clock => data[4].CLK
clock => data[5].CLK
clock => data[6].CLK
clock => data[7].CLK
sh_en => data.OUTPUTSELECT
sh_en => data.OUTPUTSELECT
sh_en => data.OUTPUTSELECT
sh_en => data.OUTPUTSELECT
sh_en => data.OUTPUTSELECT
sh_en => data.OUTPUTSELECT
sh_en => data.OUTPUTSELECT
sh_en => data.OUTPUTSELECT
ld_en => data.OUTPUTSELECT
ld_en => data.OUTPUTSELECT
ld_en => data.OUTPUTSELECT
ld_en => data.OUTPUTSELECT
ld_en => data.OUTPUTSELECT
ld_en => data.OUTPUTSELECT
ld_en => data.OUTPUTSELECT
ld_en => data.OUTPUTSELECT
s_in => data.DATAB
s_out <= data[7].DB_MAX_OUTPUT_PORT_TYPE
p_in[0] => data.DATAB
p_in[1] => data.DATAB
p_in[2] => data.DATAB
p_in[3] => data.DATAB
p_in[4] => data.DATAB
p_in[5] => data.DATAB
p_in[6] => data.DATAB
p_in[7] => data.DATAB
p_out[0] <= data[0].DB_MAX_OUTPUT_PORT_TYPE
p_out[1] <= data[1].DB_MAX_OUTPUT_PORT_TYPE
p_out[2] <= data[2].DB_MAX_OUTPUT_PORT_TYPE
p_out[3] <= data[3].DB_MAX_OUTPUT_PORT_TYPE
p_out[4] <= data[4].DB_MAX_OUTPUT_PORT_TYPE
p_out[5] <= data[5].DB_MAX_OUTPUT_PORT_TYPE
p_out[6] <= data[6].DB_MAX_OUTPUT_PORT_TYPE
p_out[7] <= data[7].DB_MAX_OUTPUT_PORT_TYPE


|rx|rx_dp:datapath|counter_nbit:counter_shift
clock => data[0].CLK
clock => data[1].CLK
clock => data[2].CLK
clock => data[3].CLK
clock => data[4].CLK
clock => data[5].CLK
clock => data[6].CLK
clock => data[7].CLK
clear => data.OUTPUTSELECT
clear => data.OUTPUTSELECT
clear => data.OUTPUTSELECT
clear => data.OUTPUTSELECT
clear => data.OUTPUTSELECT
clear => data.OUTPUTSELECT
clear => data.OUTPUTSELECT
clear => data.OUTPUTSELECT
en => data.OUTPUTSELECT
en => data.OUTPUTSELECT
en => data.OUTPUTSELECT
en => data.OUTPUTSELECT
en => data.OUTPUTSELECT
en => data.OUTPUTSELECT
en => data.OUTPUTSELECT
en => data.OUTPUTSELECT
ld => data.OUTPUTSELECT
ld => data.OUTPUTSELECT
ld => data.OUTPUTSELECT
ld => data.OUTPUTSELECT
ld => data.OUTPUTSELECT
ld => data.OUTPUTSELECT
ld => data.OUTPUTSELECT
ld => data.OUTPUTSELECT
tc[0] => Equal0.IN7
tc[1] => Equal0.IN6
tc[2] => Equal0.IN5
tc[3] => Equal0.IN4
tc[4] => Equal0.IN3
tc[5] => Equal0.IN2
tc[6] => Equal0.IN1
tc[7] => Equal0.IN0
d[0] => data.DATAB
d[1] => data.DATAB
d[2] => data.DATAB
d[3] => data.DATAB
d[4] => data.DATAB
d[5] => data.DATAB
d[6] => data.DATAB
d[7] => data.DATAB
q[0] <= data[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= data[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= data[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= data[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= data[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= data[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= data[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= data[7].DB_MAX_OUTPUT_PORT_TYPE
tc_flag <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|rx|rx_dp:datapath|shift_register_8bit:shift_reg_data
clock => data[0].CLK
clock => data[1].CLK
clock => data[2].CLK
clock => data[3].CLK
clock => data[4].CLK
clock => data[5].CLK
clock => data[6].CLK
clock => data[7].CLK
sh_en => data.OUTPUTSELECT
sh_en => data.OUTPUTSELECT
sh_en => data.OUTPUTSELECT
sh_en => data.OUTPUTSELECT
sh_en => data.OUTPUTSELECT
sh_en => data.OUTPUTSELECT
sh_en => data.OUTPUTSELECT
sh_en => data.OUTPUTSELECT
ld_en => data.OUTPUTSELECT
ld_en => data.OUTPUTSELECT
ld_en => data.OUTPUTSELECT
ld_en => data.OUTPUTSELECT
ld_en => data.OUTPUTSELECT
ld_en => data.OUTPUTSELECT
ld_en => data.OUTPUTSELECT
ld_en => data.OUTPUTSELECT
s_in => data.DATAB
s_out <= data[7].DB_MAX_OUTPUT_PORT_TYPE
p_in[0] => data.DATAB
p_in[1] => data.DATAB
p_in[2] => data.DATAB
p_in[3] => data.DATAB
p_in[4] => data.DATAB
p_in[5] => data.DATAB
p_in[6] => data.DATAB
p_in[7] => data.DATAB
p_out[0] <= data[0].DB_MAX_OUTPUT_PORT_TYPE
p_out[1] <= data[1].DB_MAX_OUTPUT_PORT_TYPE
p_out[2] <= data[2].DB_MAX_OUTPUT_PORT_TYPE
p_out[3] <= data[3].DB_MAX_OUTPUT_PORT_TYPE
p_out[4] <= data[4].DB_MAX_OUTPUT_PORT_TYPE
p_out[5] <= data[5].DB_MAX_OUTPUT_PORT_TYPE
p_out[6] <= data[6].DB_MAX_OUTPUT_PORT_TYPE
p_out[7] <= data[7].DB_MAX_OUTPUT_PORT_TYPE


|rx|rx_dp:datapath|counter_nbit:counter_rxfull
clock => data[0].CLK
clock => data[1].CLK
clock => data[2].CLK
clear => data.OUTPUTSELECT
clear => data.OUTPUTSELECT
clear => data.OUTPUTSELECT
en => data.OUTPUTSELECT
en => data.OUTPUTSELECT
en => data.OUTPUTSELECT
ld => data.OUTPUTSELECT
ld => data.OUTPUTSELECT
ld => data.OUTPUTSELECT
tc[0] => Equal0.IN2
tc[1] => Equal0.IN1
tc[2] => Equal0.IN0
d[0] => data.DATAB
d[1] => data.DATAB
d[2] => data.DATAB
q[0] <= data[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= data[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= data[2].DB_MAX_OUTPUT_PORT_TYPE
tc_flag <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|rx|rx_cu:control_unit
clock => present_state~1.DATAIN
reset => present_state~3.DATAIN
clr_start <= <GND>
flag_error <= flag_error.DB_MAX_OUTPUT_PORT_TYPE
clear_c_shift <= clear_c_shift.DB_MAX_OUTPUT_PORT_TYPE
clear_c_rxfull <= clear_c_rxfull.DB_MAX_OUTPUT_PORT_TYPE
flag_rxfull => next_state.DATAA
flag_rxfull => next_state.DATAA
flag_rxfull => next_state.DATAA
flag_rxfull => next_state.DATAA
flag_shift_data => next_state.OUTPUTSELECT
flag_shift_data => next_state.OUTPUTSELECT
flag_shift_data => next_state.OUTPUTSELECT
flag_shift_data => next_state.OUTPUTSELECT
flag_shift_data => next_state.OUTPUTSELECT
flag_shift_data => next_state.OUTPUTSELECT
flag_shift_sample => next_state.OUTPUTSELECT
flag_shift_sample => next_state.OUTPUTSELECT
flag_shift_sample => next_state.DATAA
flag_68 => next_state.OUTPUTSELECT
flag_68 => next_state.OUTPUTSELECT
sh_en_samples <= sh_en_samples.DB_MAX_OUTPUT_PORT_TYPE
sh_en_data <= sh_en_data.DB_MAX_OUTPUT_PORT_TYPE
start_en <= start_en_tmp.DB_MAX_OUTPUT_PORT_TYPE
start => next_state.DATAB
start => next_state.DATAB
start => next_state.DATAB
start => next_state.DATAB
stop_en <= <VCC>
stop => next_state.OUTPUTSELECT
stop => next_state.OUTPUTSELECT
stop => next_state.DATAB
count_en_sh <= count_en_sh.DB_MAX_OUTPUT_PORT_TYPE
count_en_rxfull <= count_en_rxfull.DB_MAX_OUTPUT_PORT_TYPE


